# Workflow for building and releasing a Go Binaries
name: Build and Release Go Binaries

on:
  # Runs on pushes targeting the specific branch
  push:
    tags:
      - "v*"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow creating releases
permissions:
  contents: write

# Allow only one concurrent release, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production releases to complete.
concurrency:
  group: "ci"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: arm64
          - goos: darwin
            goarch: amd64
          - goos: darwin
            goarch: arm64
          - goos: windows
            goarch: amd64

    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"

      - name: Build binary
        id: bin
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          VERSION: ${{ github.ref_name }}
        run: BINARY_NAME=$(./scripts/build.sh | tee /dev/stderr | tail -n 1) && echo "path=dist/${BINARY_NAME}" >> $GITHUB_OUTPUT

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: tailwind-sorter-${{ matrix.goos }}-${{ matrix.goarch }}
          path: ${{ steps.bin.outputs.path }}
          if-no-files-found: error

  # Release job
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ github.ref_name }} \
            --title "${{ github.ref_name }}" \
            artifacts/*/*
